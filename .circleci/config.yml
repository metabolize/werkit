version: 2.1

orbs:
  node: circleci/node@5.1.0

with_python: &with_python
  docker:
    - image: cimg/python:3.9

install_poetry: &install_poetry
  run:
    name: Install Poetry
    command: |
      pip install poetry==1.2.2
      poetry --version

install_python_deps: &install_python_deps
  run:
    name: Install python dependencies
    command: poetry install --no-ansi --no-interaction

show_versions: &show_versions
  run:
    name: Show versions
    command: poetry show

jobs:
  test:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - run:
          name: Install python dependencies
          command: |
            poetry install \
              --no-ansi --no-interaction \
              --extras client \
              --extras lambda_common \
              --extras compute_graph
      - *show_versions
      - run:
          name: Run tests
          command: ./dev.py coverage

      - run:
          name: Run tests without typing_extensions
          command: |
            pip uninstall typing-extensions
            ./dev.py coverage

      - node/install:
          node-version: '16.13'

      - run:
          name: Install Node dependencies
          when: always
          command: npm ci

      - run:
          name: Run tests in types/
          when: always
          working_directory: types
          command: npm test

  lint:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - run:
          name: Check lint
          command: ./dev.py lint

      - node/install

      - run:
          name: Install Node dependencies
          when: always
          command: npm ci

      - run:
          name: Check that schema are up to date
          when: always
          command: ./node_modules/.bin/1schema check

  format:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - run:
          name: Check code format
          command: ./dev.py black-check

      - node/install

      - run:
          name: Install Node dependencies
          when: always
          command: npm ci

      - run:
          name: Check TypeScript format
          when: always
          command: npm run format

  types:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - run:
          name: Check code format
          command: ./dev.py check-types

workflows:
  version: 2

  on-commit:
    jobs:
      - test:
          context: 'Metabolize OSS AWS'
      - lint
      - format
      - types

  daily:
    triggers:
      - schedule:
          cron: '0 17 * * *'
          filters:
            branches:
              only: main
    jobs:
      - test:
          context: 'Metabolize OSS AWS'
      - lint
      - format
      - types
