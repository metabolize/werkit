version: 2.1

orbs:
  node: circleci/node@4.1.0

with_python: &with_python
  docker:
    - image: circleci/python:3.7

with_python_and_redis: &with_python_and_redis
  docker:
    - image: circleci/python:3.7
    - image: redis

install_poetry: &install_poetry
  run:
    name: Install Poetry
    command: |
      pip install poetry==1.1.7
      poetry --version

install_python_deps: &install_python_deps
  run:
    name: Install python dependencies
    command: poetry install --no-ansi --no-interaction

show_versions: &show_versions
  run:
    name: Show versions
    command: poetry show


jobs:
  main:
    <<: *with_python_and_redis

    steps:
      - checkout

      - *install_poetry
      - run:
          name: Install python dependencies
          command: |
            poetry install \
              --no-ansi --no-interaction \
              --extras client \
              --extras lambda_common \
              --extras parallel
      - *show_versions

      - run:
          name: Run tests
          command: ./dev.py coverage

  lint:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - run:
          name: Check lint
          command: ./dev.py lint

      - node/install

      - run:
          name: Install Node dependencies
          when: always
          command: npm ci

      - run:
          name: Check that schema are up to date
          when: always
          command: 1schema check

  format:
    <<: *with_python

    steps:
      - checkout

      - *install_poetry
      - *install_python_deps
      - *show_versions

      - run:
          name: Check code format
          command: ./dev.py black-check

      - node/install

      - run:
          name: Install Node dependencies
          when: always
          command: npm ci

      - run:
          name: Check TypeScript format
          when: always
          command: npm run format

workflows:
  version: 2

  on-commit:
    jobs:
      - main:
          context: "Metabolize OSS AWS"
      - lint
      - format

  daily:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only: main
    jobs:
      - main:
          context: "Metabolize OSS AWS"
      - lint
      - format
